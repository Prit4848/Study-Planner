<%- include('./partials/header') %>
<div class="container mx-auto p-4 reveal">
  <div class="flex flex-col md:flex-row justify-between reveal">
    <div class="md:w-2/3 bg-white p-6 rounded-lg shadow-md mb-4 md:mb-0 md:mr-4 reveal">
      <h2 class="text-3xl font-bold mb-2"><%= plan.title %></h2>
      <p class="mt-2 text-gray-700"><%= plan.description %></p>
      <p class="mt-2 text-gray-700"><strong>Date:</strong> <%= new Date(plan.date).toDateString() %></p>
      
      <% if (plan.Attachment) { %>
        <div class="mt-4 reveal">
          <h3 class="text-xl font-semibold mb-2">Attachment</h3>
          <% if (plan.Attachment.contentType.startsWith('image/')) { %>
            <img src="data:image/png;base64,<%= plan.Attachment.toString('base64') %>" alt="Attachment" class="w-full h-auto rounded-md mt-2">
          <% } else if (plan.Attachment.contentType === 'application/pdf') { %>
            <embed src="data:application/pdf;base64,<%= plan.Attachment.data.toString('base64') %>" type="application/pdf" class="w-full h-[400px] md:h-[600px]" />
          <% } else { %>
            <a href="/plan/<%= plan._id %>/attachment" class="text-blue-500 hover:underline" target="_blank">Download Attachment</a>
          <% } %>
        </div>
      <% } %>
      
      <div class="mt-4 reveal">
        <h3 class="text-xl font-semibold mb-2">Tasks</h3>
        <ul class="list-disc pl-5">
          <% plan.tasks.forEach(task => { %>
            <li class="mt-2 p-4 bg-gray-100 rounded-lg">
              <p><strong>Start Time:</strong> <%= task.startTime %> - <strong>End Time:</strong> <%= task.endTime %></p>
              <p><strong>Task Title:</strong> <%= task.title %></p>
              <p><%= task.description %></p>
              <span class="<%= task.completed ? 'text-green-500' : 'text-red-500' %> font-bold flex items-center">
                <i class="<%= task.completed ? 'fas fa-check-circle' : 'fas fa-times-circle' %> mr-2"></i>
                <%= task.completed ? 'Completed' : 'Pending' %>
              </span>
              <form action="/plan/<%= plan._id %>/<%= task._id %>/toggle" method="POST" class="mt-2">
                <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition duration-300 ease-in-out">
                  <%= task.completed ? 'Mark as Pending' : 'Mark as Completed' %>
                </button>
              </form>
            </li>
          <% }) %>
        </ul>
      </div>
      <div class="mt-4 reveal">
        <a href="/plan/<%= plan._id %>/<%= plan.userId %>/edit" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition duration-300 ease-in-out">Edit Plan</a>
      </div>
    </div>
    <div class="md:w-1/3 bg-white p-6 rounded-lg shadow-md reveal">
      <h3 class="text-2xl font-semibold mb-4">Set Reminder</h3>
      <form action="/plan/<%= plan._id %>/set-reminder" method="POST">
        <label for="reminderDate" class="block text-gray-700">Select Date and Time:</label>
        <input type="datetime-local" id="reminderDate" name="reminderDate" required class="border p-2 rounded-md w-full mt-2">
        <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded-md mt-4 hover:bg-green-600 transition duration-300 ease-in-out w-full">Set Reminder</button>
      </form>
      <div id="qr-code-container" class="mt-4 reveal">
        <h3 class="text-2xl font-semibold mb-4">WhatsApp QR Code</h3>
        <div id="qr-code" class="border p-2 rounded-md w-full mt-2"></div>
        <button id="refresh-qr" class="bg-yellow-500 text-white px-4 py-2 rounded-md mt-4 hover:bg-yellow-600 transition duration-300 ease-in-out w-full">Refresh QR Code</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.getElementById('refresh-qr').addEventListener('click', async () => {
    const response = await fetch('/api/qr-code');
    if (response.ok) {
      const data = await response.json();
      console.log('QR Code Image:', data.qrCodeImage); // Log for debugging
      document.getElementById('qr-code').innerHTML = `<img src="${data.qrCodeImage}" alt="QR Code" />`;
    } else {
      alert('Failed to load QR code');
    }
  });

  // Automatically fetch the QR code when the page loads
  document.getElementById('refresh-qr').click();
</script>
<script>
  // Intersection Observer to reveal elements on scroll
  const revealElements = document.querySelectorAll('.reveal');
  
  const observer = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('active');
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.1 });
  
  revealElements.forEach(el => {
    observer.observe(el);
  });
</script>

<%- include('./partials/footer') %>
